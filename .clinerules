# Cline Rules

## プロジェクト固有のパターン

### 開発環境
- Windows環境とWSL環境の両方をサポート
- WSL環境ではプロセス分離による安定性確保が重要
- テスト実行時はプロセスの分離実行とリソースの解放確認が必要

### アーキテクチャ
- フロントエンド：デスクトップ版はThree.js、モバイル版はSVGベース
- バックエンド：FastAPI + SQLite（開発環境）/ PostgreSQL（本番環境）
- 共有コンポーネントアーキテクチャを採用

### API設計
- フィールド名の統一（right_ascension, declination）
- レスポンス形式の一貫性確保
- 命名規則の確立

### デプロイ戦略
- フロントエンド：Vercelへのデプロイ
  - 環境変数`REACT_APP_API_URL`でバックエンドAPIのURLを設定
  - ビルドコマンド：`npm run build:mobile`
  - 出力ディレクトリ：`dist`
  - ルートファイル：`mobile.html`

- バックエンド：Renderへのデプロイ
  - PostgreSQLへの移行
  - 環境変数`DATABASE_URL`でデータベース接続URLを設定
  - 環境変数`FRONTEND_URL`でフロントエンドURLを設定
  - `render.yaml`による設定
  - データ移行スクリプト：`migrate_to_postgres.py`

## 既知の課題
- WSL環境でのテスト実行の安定性
- モバイル版のパフォーマンス最適化
- データベース拡張（新規星座データの追加）

## ユーザーの好みとワークフロー
- 開発時はWSL環境を優先
- テスト実行時はプロセスの分離実行を心がける
- コードレビューではパフォーマンスと保守性を重視
